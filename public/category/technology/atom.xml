<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Technology | Everything is Gray]]></title>
  <link href="http://everythingisgray.herokuapp.com/category/technology/atom.xml" rel="self"/>
  <link href="http://everythingisgray.herokuapp.com/"/>
  <updated>2013-05-27T18:12:53-07:00</updated>
  <id>http://everythingisgray.herokuapp.com/</id>
  <author>
    <name><![CDATA[James Barclay]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Automatically Post Images to Tumblr Using Automator]]></title>
    <link href="http://everythingisgray.herokuapp.com/2010/08/18/how-i-use-automator-to-post-images-to-tumblr/"/>
    <updated>2010-08-18T21:14:33-07:00</updated>
    <id>http://everythingisgray.herokuapp.com/2010/08/18/how-i-use-automator-to-post-images-to-tumblr</id>
    <content type="html"><![CDATA[<p>For the past few months I have been drawing everyday on 2.5 x 3.5 inch pieces of Bristol board as part of my most recent &lsquo;<a href="http://koobtra.com/">kooBtrA</a>&rsquo; project. kooBtrA = ArtBook in reverse, as I plan to self publish a full-color book containing all the images sometime after one year passes.</p>

<p>As you might imagine, finding the time to draw every day can be challenging. Not to mention the fact that I&rsquo;ve also been posting these images to my Tumbleog; which includes scanning, resizing, and logging into Tumblr to post the image along with a description and tag. This became mundane after the first few days of posting, so I decided to set time aside to automate this process, as doing so would surely save me time in the long run.</p>

<p>I did a bit of research and discovered that Tumblr offers the ability to send posts via email. This immediately gave me the idea of using <a href="http://en.wikipedia.org/wiki/Automator_(software">Automator</a>) to streamline this process, as Automator offers a very straightforward &lsquo;New Mail Message&rsquo; Action. This would allow me to create an Image Capture Plugin that grabs the image that was scanned and include it in the email message, right? Well, yes, but with one caveat. With Snow Leopard&rsquo;s introduction came a few changes, one of which removes the ability to scan to a specified folder while using an Image Capture Plugin, (the image is saved to the ~/Pictures folder, then the Workflow runs). The workaround in my case was to use a Folder Action, which would result in the Workflow running any time a new file is added to the specified folder.</p>

<p>What I had been doing until this point was scanning the image to a subfolder of my ~/Documents folder; scaling the image to 300px max on either side depending on orientation; then uploading the image to Tumblr.com along with a description and tag. The Folder Action Workflow I ended up producing cuts the time this took in half.</p>

<p>The first thing I did was create two variables. One for the name of the post and one for the number of the post. You can achieve this by right or control clicking in the variables window at the bottom of the application window and choosing &lsquo;New variable.&rsquo; I left the value blank, as this will vary with each post. The next step was to start dragging actions over to the right of the application window. The first is an &lsquo;Ask for Text&rsquo; Action, which asks for the name of the post, then sets the value of the variable. The same goes for the number of post. The Workflow then asks for the Finder items to act on, then copies them to a new location and scales them to 300px. Finally, the &lsquo;New Mail Message&rsquo; Action is added, which utilizes the name and number variables that were set previously, as well as receives the resized image from the previous Action. The last Action that was added was &lsquo;Send Outgoing Messages,&rsquo; which is fairly self explanatory.</p>

<p>Below is the printed Workflow for your reference should you wish to accomplish something similar. If you have any suggestions as to improving this Automator Workflow please leave a comment. For more information regarding Tumblr&rsquo;s post via email option please visit <a href="http://www.tumblr.com/docs/en/email_publishing">http://www.tumblr.com/docs/en/email_publishing</a>.</p>

<p><a href="http://a.imageshack.us/img441/5205/posttokoobtra.jpg"><img src="http://a.imageshack.us/img718/5205/posttokoobtra.jpg" alt="Post to Tumblr" /> </a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Restore MySQL Database from ibdata and .frm Files]]></title>
    <link href="http://everythingisgray.herokuapp.com/2010/07/20/restore-mysql-database-from-ibdata-and-frm-files/"/>
    <updated>2010-07-20T18:48:54-07:00</updated>
    <id>http://everythingisgray.herokuapp.com/2010/07/20/restore-mysql-database-from-ibdata-and-frm-files</id>
    <content type="html"><![CDATA[<p>Last week I was presented with a problem that involved restoring a MySQL database for a client using only the <code>/data</code> folder from an original MySQL installation. The solution turned out to be rather simple, but that didn&rsquo;t stop me from racking my brain for a few hours. Thus, I thought I&rsquo;d share my experience in hopes of helping others that may run into this.</p>

<p><em>NOTE</em> The MySQL database I was tasked with restoring was associated with a WordPress installation. My guess is that this is irrelevant, though.</p>

<p><em>ALSO NOTE</em> This article assumes you are comfortable with software solutions such as <a href="http://www.mamp.info/en/index.html">MAMP</a> and/or <a href="http://www.apachefriends.org/en/xampp.html">XAMPP</a>, as well as <a href="http://www.phpmyadmin.net/home_page/index.php">phpMyAdmin</a>.</p>

<p>I made the decision early on to solve this problem locally, (I find that working directly from a web server usually just gets me into trouble).  I use MAMP on a regular basis and as such have quite a few MySQL databases associated with that installation. Rather than fooling with this at all I opted to use XAMPP on a Windows XP SP2 machine. Either one of these solutions will work, as they essentially provide the same services. I chose to avoid using MAMP on my machine because of everything I have invested into that application, but that doesn&rsquo;t mean you have to.</p>

<p>The first thing you&rsquo;ll want to do is install a fresh copy of either MAMP, (Mac only), or XAMPP. Then create an empty database using phpMyAdmin with the same name as your original database, (the one you&rsquo;re trying to restore). For example, if your previous database was called &lsquo;wordpress,&rsquo; in phpMyAdmin, (under the &lsquo;Create new database&rsquo; text field), you would enter &lsquo;wordpress.&rsquo; This will create a folder named <code>wordpress</code> in <code>/Applications/MAMP/db/mysql</code> if you&rsquo;re using MAMP, or <code>C:\xampp\mysql</code> if you&rsquo;re using XAMPP. At this point you&rsquo;ll want to turn off the MySQL service. Now, copy the contents of, (not the entire folder), your mysql database folder that contains the .frm files to the new location. The next step is to copy the <code>ibdata1</code> file to the MySQL folder in either XAMPP or MAMP, then start the MySQL service again. Now you should be able to locate your database tables in phpMyAdmin.</p>

<p>At this point, (assuming you don&rsquo;t want to keep the data locally on your machine), you&rsquo;ll want to export the database using phpMyAdmin. Be sure to check Add DROP TABLE, choose SQL as the export type, and check the &lsquo;Save as file&rsquo; checkbox. The .sql file that will be generated can easily be imported into another instance of phpMyAdmin. The new database doesn&rsquo;t need to have the same name as the previous database, either. I was unable to use my previous database name because the site I was working on had been moved to a shared hosting server, (where someone had already chosen the name of my previous database), and everything worked fine.</p>

<p>Also keep in mind that this can be accomplished whether or not your server is running phpMyAdmin. There are plenty of alternatives available that will allow you to accomplish the same tasks, and there&rsquo;s always the command line. The most important step is to simply copy the contents of the <code>/data</code> folder and the <code>ibdata1</code> file. Hope this helps!</p>

<p>Leave a comment if you have any questions!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configure Archive Utility in Mac OS X]]></title>
    <link href="http://everythingisgray.herokuapp.com/2010/02/15/configure-archive-utility-in-mac-os-x/"/>
    <updated>2010-02-15T20:46:41-08:00</updated>
    <id>http://everythingisgray.herokuapp.com/2010/02/15/configure-archive-utility-in-mac-os-x</id>
    <content type="html"><![CDATA[<p>Having recently purchased a new MacBook Pro and electing to skip the option of running <a href="http://en.wikipedia.org/wiki/Migration_Assistant_(Apple">Migration Assistant</a>) to transfer my data and settings, I noticed that a few applications were behaving differently. Over the years I&rsquo;ve configured quite a few things on my Mac, and eventually I became accustomed to said customizations. One of the first things I noticed was that when I would unarchive a zip file, the compressed file would stay put. I remembered that a few years ago I learned of a cool way to configure Mac OS X&rsquo;s built-in Archive Utility, (using a System Preference pane), so I immediately went digging. To do this, simply navigate to <code>/System/Library/CoreServices</code>. From there right or control click on Archive Utility.app, and select &ldquo;Show Package Contents.&rdquo; A new window will open containing a folder named <code>Contents</code>, within which you&rsquo;ll find <code>Resources</code>, and finally <code>Archives.prefPane</code>. Opening this preference pane will result in System Preferences.app asking if you&rsquo;d like to install for all users or for this user only. Voila! Now you can tell Archive Utility to delete the archive after expanding it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Check if your Mac is 64 bit]]></title>
    <link href="http://everythingisgray.herokuapp.com/2009/10/08/check-if-your-mac-is-64-bit/"/>
    <updated>2009-10-08T12:52:41-07:00</updated>
    <id>http://everythingisgray.herokuapp.com/2009/10/08/check-if-your-mac-is-64-bit</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s an easy way to determine whether or not your Mac is 64 bit capable. Open Terminal.app, which is located in <code>/Applications/Utilities</code> and type in:</p>

<p><code>sysctl hw | grep 64bit</code></p>

<p>If your machine is 64 bit capable, the result will be</p>

<p><code>hw.cpu64bit_capable: 1</code></p>

<p>If your machine is not 64 bit capable, the result will be</p>

<p><code>hw.cpu64bit_capable: 0</code></p>

<p>Tip source: <a href="http://osxdaily.com/2009/09/23/check-if-your-mac-is-64-bit-compatible-via-command-line/">OSXDaily.com</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Snow Stack 3D CSS]]></title>
    <link href="http://everythingisgray.herokuapp.com/2009/07/22/snow-stack-3d-css/"/>
    <updated>2009-07-22T18:36:30-07:00</updated>
    <id>http://everythingisgray.herokuapp.com/2009/07/22/snow-stack-3d-css</id>
    <content type="html"><![CDATA[<p>A gentleman by the name of Charles Ying of <a href="http://www.satine.org/">Satine.org</a> has developed a new 3D CSS visual effects demonstration called <a href="http://www.satine.org/archives/2009/07/11/snow-stack-is-here/">Snow Stack</a>, which runs entirely on JavaScript, native WebKit CSS extensions, and XHTML/HTML. If you&rsquo;re familiar with Cover Flow/Core Animation on the Mac you&rsquo;ll immediately recognize Snow Stack. In order to run the demo you&rsquo;ll need either the <em>Snow Leopard Beta + Safari</em> <strong>or</strong> <em>Leopard + the latest nightly build of WebKit</em>. Either way, it&rsquo;s quite fascinating to think that this is all being done in the browser.</p>
]]></content>
  </entry>
  
</feed>
